1_ Creamos un Nav que incluira la conexion a la wallet, para ello: 
    -> await new ethers.providers.Web3Provider(window.ethereum) // Cojemos el provider del browser con ethers
    -> provider.send(eth_requestAccounts, []) // utilizamos el provider para conectar con el wallet del usuario con

FALTA:
    Solicitar cambio de network al conectar la billetera
    Advertencia de network equivocada y boton para cambiar automaticamente
    多Oculatr el contenido si no se conecta la wallet?

2_ Creamos la interfaz y la logica para efectuar "swaps" utilizando el uniswap v3 sdk
    - Creamos un "CurrencyField" del que se coje el "value" y se llama a "getPrice(e.target.value)"
    - Utilizamos el "@uniswap/smart-order-router" (router) y el "@uniswap/sdk-core" (nos facilita objetos para la logica)
        para recibir el precio y "data para la transaccion" a traves de uniswap.
        Esta data sera la que se enviara despues de dar "approve a uniswapRouter" para poder gestionar el swap


FALTA: 
    A単adir Coingecko data API para lsita de tokens de forma automaticamente
    Poder a単adir MAS tokens manualmente (expeculativos)
    A単adir mas funciones del "@uniswap/sdk" --> SmartContractProgrammer youtube -> singleHop...
    
    
    

COMO DETECTAR INFO DE rainbow kit --> WAGMI
Es posible usar la uv3 de forma legal? --> SI NO SE GANA DINERO SI
Arreglar boton de swap 

NECESITO
modificar las variables de AplhaRouter y ver si funciona correctamente al mover de sitio la logica dentro del mismo JS
enviar desde otros componenetes esos valores como parametros de las funciones - obtener esos parametros desde WAGMI y los inputs(dropdown)
Cambiar la data del dropdown cuando cambia la chain
    2 json, uno con los symbol y otro con toda la info
Vincular a esos dropdown la data de cada token seleccionado
Coger alguna data de tokens de ropsten a mano, y meterle en la misma estrcutura que las otros json

ES FACIL
En App importamos las 4 funciones del Router, ahi se gestiona todo
Solo se le pasa el metodo "getPrice" del Router al "CurrencyField" para que pueda recoger el input

/*****
REPASAR TODO, JS, REACT, REACT-WEB3, THREE, WEB API, AJAX...
ESTUDIAR MAS UNISWAP V3
*****/


SI se selecciona un token, no se puede seleccionar el mismo en el otro

Arreglar el signer - el address, para coger el balanceOf

///////////////////

- como ejectuar ciertas funciones solo por 1era vez cuando se renderice la app

useEffect - setteamos default values para los tokens para el 1er render
+
useEffect - 
...


///////////////////
NO CARGA ADECUADAMENTE - las funciones async estan bien manejadas
1_era vez que -> no saca los tokens
2_da seleccion de token -> no saca los contratos
3_era -> no saca el balanceOf

revisar si con un search se soluciona el problema del form-select. 
Ya que sino, para modificar el array hay que hacer : indexOf() y splice() + agregar el eliminado anteriormente


ARREGLAR e provider de POLYGON
LOGICA DE SWAPS, pools


CORS POLICY 
--
Access to fetch at 'https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v2/ropsten.json' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.
--
Como no usamos express, tenemos que ver si el trozo de codigo funciona:
https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors
se puede sin express??

Hemos cambiado el atributo value por defalutValue
https://stackoverflow.com/questions/43556212/failed-form-proptype-you-provided-a-value-prop-to-a-form-field-without-an-on

ARREGLAR
ETH va bien
Roosten, cors
Polygon, providers...